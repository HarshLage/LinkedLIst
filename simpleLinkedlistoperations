#include <iostream>
#include<bits/stdc++.h>
using namespace std;

class Node{
  public:
  int data;
  Node * next;

  Node(){
    cout<<"i am inside default constuctor"<<endl;
    this->next = NULL;
  }
  Node(int data){
    cout<<"i am inside paramiterized constructor"<<endl;
    this -> data = data;
    this -> next  = NULL;

  }
};

void print(Node *head , int &count){
   Node *temp = head;
  while(temp != NULL){
 
  cout<<temp->data<<"->";
  temp = temp -> next;
  count++;
  }
}
void insertAThead(Node * &head, Node* &tail, int data){
  if(head==NULL){
    //create a new node first
    Node * newNode = new Node(data);
    //assining head to newNode
    head = newNode;
    tail = newNode;
  }
  //for non - empty linked list
  else{
  //creation of node
  Node * newNode = new Node(data);
  //assining of newnode
  newNode->next = head;
  //assining head
  head = newNode;
  }
}
void insertAttail(Node * &head , Node *&tail , int data){
  if(head == NULL){
    //creating a NOde
    Node * newNode = new Node(data);
    //assining
    head = newNode;
    tail = newNode;
  }
  else{
    Node  *newNode = new Node(data);

    tail->next = newNode;
    tail = newNode;

  }
}
// create tail without assinging in main
void tailInsert(Node *&head , Node*&tail){
  Node * temp = head;
  while(temp!=NULL){
    temp = temp -> next;
  }
  tail  = head;
}
int main() {
  Node *first = new Node(3);
  Node *second = new Node(4);
  Node *third = new Node(4);
  Node *fourth = new Node(4);

  first -> next = second;
  second -> next = third;
  third -> next = fourth;
  fourth -> next = NULL;
  
  //creating node
  Node *head = first;
  int count = 0;

  //printing
  print(head,count);
  cout<<endl;
  cout<<count;
  // creating tail
  Node *tail = fourth;

  insertAThead(head,tail,8);
  print(head,count);


  insertAttail(head,tail,500);
  print(head,count);
  


  

  return 0;
}
